pipeline {
    agent {
        docker { image 'node:16.13.1-alpine' }
    }

    stages {
        stage('Info') {
            steps {
                echo 'Print thee system environment...'
                sh 'printenv'
            }
        }

        stage ('Clone') {
            steps {
                echo 'Clone the application source...'
                git branch: 'docker-dev', url: "https://github.com/SelvaJFrog/project-examples.git"
            }
        }

        stage ('Config') {
            steps {
                rtServer (
                    id: 'ARTIFACTORY_SERVER',
                    url: 'http://10.176.0.212',
                    credentialsId: 'artifactoryCredentials'
                )
            }
        }

        stage ('Dockerize') {
            steps {
                script {
                    docker.build(ARTIFACTORY_DOCKER_REGISTRY + '/hello-world:latest', 'jenkins-examples/pipeline-examples/resources')
                }
            }
        }

        stage ('Push') {
            steps {
                rtDockerPush(
                    serverId: 'ARTIFACTORY_SERVER',
                    image: ARTIFACTORY_DOCKER_REGISTRY + '/hello-world:latest',
                    host: HOST_NAME,
                    targetRepo: 'pe-docker-dev-local',
                    properties: 'project-name=pe-docker;status=stable'
                )
            }
        }

        stage ('Build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "ARTIFACTORY_SERVER"
                )
            }
        }
    }
}