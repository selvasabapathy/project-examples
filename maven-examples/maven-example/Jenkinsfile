pipeline {
    agent any

    environment {
        JAVA_HOME = '/usr/lib/jvm/java-11-openjdk-11.0.13.0.8-4.el8_5.x86_64'
        MAVEN_HOME = '/usr/share/maven'
    }

    stages {
        stage('Info') {
            steps {
                echo 'Print thee system environment...'
                sh 'printenv'
            }
        }

        stage ('Clone') {
            steps {
                echo 'Clone the application source...'
                git branch: 'maven-dev', url: "https://github.com/SelvaJFrog/project-examples.git"
            }
        }

        stage ('Artifactory') {
            steps {
                //                 rtServer (
                //                     id: "ARTIFACTORY_SERVER",
                //                     url: 'http://10.176.0.212',
                //                     credentialsId: 'artifactoryCredentials'
                //                 )

                rtMavenDeployer (
                    id: 'MAVEN_DEPLOYER',
                    serverId: 'ARTIFACTORY_SERVER',
                    releaseRepo: 'pe-maven-virtual',
                    snapshotRepo: 'pe-maven-virtual',
                    properties: ['deployerName=Selva', 'deployerName=Atlanta']
                )

                rtMavenResolver (
                    id: 'MAVEN_RESOLVER',
                    serverId: 'ARTIFACTORY_SERVER',
                    releaseRepo: 'pe-maven-virtual',
                    snapshotRepo: 'pe-maven-virtual'
                )
            }
        }

        stage ('Exec Maven') {
            steps {
                rtMavenRun (
//                     tool: MAVEN_DEPLOYER_RESOLVER,
                    pom: 'maven-examples/maven-example/pom.xml',
                    goals: 'clean install',
                    deployerId: "MAVEN_DEPLOYER",
                    resolverId: "MAVEN_RESOLVER"
                )
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "ARTIFACTORY_SERVER"
                )
            }
        }

    }
}
